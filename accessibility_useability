#!/usr/bin/env python3

import hashlib
import json
import os
from datetime import datetime

# File to store votes securely
VOTE_FILE = "votes.json"
# File to store the audit trail
AUDIT_TRAIL_FILE = "audit_trail.log"

class VotingSystem:
    def __init__(self):
        self.votes = []

    def record_vote(self, voter_id, candidate):
        vote = {'voter_id': voter_id, 'candidate': candidate}
        self.votes.append(vote)
        print(f"Vote recorded for {candidate} by voter {voter_id}.")

    def count_votes(self):
        counts = {}
        for vote in self.votes:
            # Ensure the vote dictionary has the 'candidate' key
            if 'candidate' in vote:
                candidate = vote['candidate']
                if candidate in counts:
                    counts[candidate] += 1
                else:
                    counts[candidate] = 1
            else:
                print(f"Invalid vote record: {vote}")  # Debugging output
        return counts

def main():
    voting_system = VotingSystem()
    voting_system.record_vote('voter1', 'candidateA')
    voting_system.record_vote('voter2', 'candidateB')
    voting_system.record_vote('voter3', 'candidateA')

    print("Stored votes:", voting_system.votes)  # Debugging output
    print("Current vote count:")
    print(voting_system.count_votes())

if __name__ == "__main__":
    main()

